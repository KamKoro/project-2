<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Add a New Movie</title>
  <link rel="stylesheet" href="/stylesheets/styles.css" />
  <link rel="stylesheet" href="https://unpkg.com/bulmaswatch/default/bulmaswatch.min.css" />
</head>
<body>

  <%- include('../partials/_navbar') %>

  <section class="section">
    <div class="container">
      <form action="/users/<%= user._id %>/movies" method="POST" class="box" style="max-width: 600px; margin: auto;">
        <h1 class="title is-1 has-text-centered mb-5">Add a New Movie</h1>

        <!-- Title -->
        <div class="field">
          <label class="label" for="title">Title</label>
          <div class="control">
            <input
              class="input"
              type="text"
              id="title"
              name="title"
              value="<%= movie.title || '' %>"
              required
              placeholder="Movie Title"
            />
          </div>
        </div>

        <!-- Director -->
        <div class="field">
          <label class="label" for="director">Director</label>
          <div class="control">
            <input
              class="input"
              type="text"
              id="director"
              name="director"
              value="<%= movie.directorName || '' %>"
              placeholder="Type Director's Name"
              required
              autocomplete="on"
            />
          </div>
        </div>

        <!-- Release Year -->
        <div class="field">
          <label class="label" for="releaseYear">Release Year</label>
          <div class="control">
            <input
              class="input"
              type="number"
              id="releaseYear"
              name="releaseYear"
              value="<%= movie.releaseYear || '' %>"
              required
              min="1888"
              placeholder="e.g. 2023"
            />
          </div>
        </div>

        <!-- Genre -->
        <div class="field">
          <label class="label" for="genre">Genre</label>
          <div class="control">
            <div class="select is-fullwidth">
              <select id="genre" name="genre" required>
                <option value="" disabled <%= !movie.genre ? 'selected' : '' %>>Select Genre</option>
                <% genres.forEach(g => { %>
                  <option value="<%= g._id %>" <%= movie.genre && movie.genre.equals(g._id) ? 'selected' : '' %>><%= g.name %></option>
                <% }) %>
              </select>
            </div>
          </div>
        </div>

        <!-- Rating system -->
        <div class="rating-container">
          <h3 class="title is-5 has-text-weight-semibold mb-2">My Score</h3>
          <p id="rating-label" class="rating-label mb-3">Click a score below</p>
          <div class="rating-display mb-3">
            <div id="rating-badge" class="rating-badge"><%= movie.rating > 0 ? movie.rating : '–' %></div>
          </div>
          <div class="rating-steps" role="radiogroup" aria-label="Movie rating">
            <% for (let i = 1; i <= 10; i++) { %>
              <div
                class="rating-step"
                data-score="<%= i %>"
                title="<%= i %>"
                role="radio"
                aria-checked="<%= movie.rating === i ? 'true' : 'false' %>"
                tabindex="0"
              ></div>
            <% } %>
          </div>
          <input type="hidden" name="rating" id="rating-value" value="<%= movie.rating || 0 %>" />
        </div>

        <!-- Review -->
        <div class="field">
          <label class="label" for="review">Review</label>
          <div class="control">
            <textarea
              class="textarea"
              id="review"
              name="review"
              rows="4"
              placeholder="Write your review here..."
            ><%= movie.review || '' %></textarea>
          </div>
        </div>

        <!-- Submit Button -->
        <div class="field">
          <div class="control">
            <button type="submit" class="button is-link is-fullwidth">Add Movie</button>
          </div>
        </div>

        <!-- Back Link -->
        <div class="has-text-centered mt-4">
          <a href="/users/<%= user._id %>/movies" class="button is-light">← Back to My Movies</a>
        </div>
      </form>
    </div>
  </section>

  <script>
    // Rating Logic
    const steps = document.querySelectorAll('.rating-step');
    const badge = document.getElementById('rating-badge');
    const label = document.getElementById('rating-label');
    const input = document.getElementById('rating-value');

    const labels = {
      1: 'Awful', 2: 'Bad', 3: 'Poor', 4: 'Watchable', 5: 'Okay',
      6: 'Good', 7: 'Very Good', 8: 'Great', 9: 'Excellent', 10: 'Masterpiece'
    };

    function getBadgeColor(score) {
      if (score >= 8) return '#22c55e';
      if (score >= 5) return '#facc15';
      if (score > 0) return '#f87171';
      return '#e0e0e0';
    }

    function getStepColorClass(score) {
      if (score >= 8) return 'high';
      if (score >= 5) return 'mid';
      if (score > 0) return 'low';
      return '';
    }

    function updateRating(score) {
      input.value = score;
      badge.textContent = score > 0 ? score : '';
      label.textContent = labels[score] || 'Click a score below';
      badge.style.backgroundColor = getBadgeColor(score);

      steps.forEach(step => {
        const stepScore = parseInt(step.dataset.score);
        const isActive = stepScore <= score;
        step.classList.toggle('active', isActive);
        step.classList.remove('low', 'mid', 'high');
        if (isActive) step.classList.add(getStepColorClass(score));
      });
    }

    steps.forEach(step => {
      step.addEventListener('click', () => updateRating(parseInt(step.dataset.score)));
      step.addEventListener('mouseenter', () => {
        const hoverScore = parseInt(step.dataset.score);
        badge.textContent = hoverScore;
        label.textContent = labels[hoverScore] || `Rating: ${hoverScore}`;
        badge.style.backgroundColor = getBadgeColor(hoverScore);

        steps.forEach(s => {
          const sScore = parseInt(s.dataset.score);
          const active = sScore <= hoverScore;
          s.classList.toggle('active', active);
          s.classList.remove('low', 'mid', 'high');
          if (active) s.classList.add(getStepColorClass(hoverScore));
        });
      });
      step.addEventListener('mouseleave', () => {
        const currentScore = parseInt(input.value) || 0;
        updateRating(currentScore);
      });
    });

    // Initial render
    updateRating(parseInt(input.value) || 0);
  </script>

</body>
</html>
